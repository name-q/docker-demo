##三主三从 + 扩容 + 缩容
#建立6个redis容器 开启集群 开启持久化 指定端口号
docker run -d --name redis-node-1 --net host --privileged=true -v /root/qy/redis/share/redis-node-1:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6381
docker run -d --name redis-node-2 --net host --privileged=true -v /root/qy/redis/share/redis-node-2:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6382
docker run -d --name redis-node-3 --net host --privileged=true -v /root/qy/redis/share/redis-node-3:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6383
docker run -d --name redis-node-4 --net host --privileged=true -v /root/qy/redis/share/redis-node-4:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6384
docker run -d --name redis-node-5 --net host --privileged=true -v /root/qy/redis/share/redis-node-5:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6385
docker run -d --name redis-node-6 --net host --privileged=true -v /root/qy/redis/share/redis-node-6:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6386


#进入redis配置主从
docker exec -it redis-node-1 bash
redis-cli --cluster create 192.168.11.228:6381 192.168.11.228:6382 192.168.11.228:6383 192.168.11.228:6384 192.168.11.228:6385 192.168.11.228:6386 --cluster-replicas 1
```
>>> Performing hash slots allocation on 6 nodes...
Master[0] -> Slots 0 - 5460
Master[1] -> Slots 5461 - 10922
Master[2] -> Slots 10923 - 16383
Adding replica 192.168.11.228:6385 to 192.168.11.228:6381
Adding replica 192.168.11.228:6386 to 192.168.11.228:6382
Adding replica 192.168.11.228:6384 to 192.168.11.228:6383
>>> Trying to optimize slaves allocation for anti-affinity
[WARNING] Some slaves are in the same host as their master
M: 8455f45a19d115bc4f289f5bfbfd4d6be365dd4c 192.168.11.228:6381
   slots:[0-5460] (5461 slots) master
M: 84484ee038e3584aa69038297f32674fb2aca592 192.168.11.228:6382
   slots:[5461-10922] (5462 slots) master
M: ae03cd1b4d9230fb699efc0050f3d493af73286b 192.168.11.228:6383
   slots:[10923-16383] (5461 slots) master
S: c22abc631a3844580897fa669979f8c4dc2c9336 192.168.11.228:6384
   replicates ae03cd1b4d9230fb699efc0050f3d493af73286b
S: 53872ddfe6b28f851dcfdf3536d511895603ad62 192.168.11.228:6385
   replicates 8455f45a19d115bc4f289f5bfbfd4d6be365dd4c
S: 60ef182ed3d1b898dae16eb2138fc7b2c02ecdab 192.168.11.228:6386
   replicates 84484ee038e3584aa69038297f32674fb2aca592
Can I set the above configuration? (type 'yes' to accept): 
```
yes

#进入6381查看集群状态
redis-cli -p 6381
cluster info
```
cluster_state:ok
cluster_slots_assigned:16384
cluster_slots_ok:16384
cluster_slots_pfail:0
cluster_slots_fail:0
cluster_known_nodes:6
cluster_size:3
cluster_current_epoch:6
cluster_my_epoch:1
cluster_stats_messages_ping_sent:185
cluster_stats_messages_pong_sent:201
cluster_stats_messages_sent:386
cluster_stats_messages_ping_received:196
cluster_stats_messages_pong_received:185
cluster_stats_messages_meet_received:5
cluster_stats_messages_received:386
```
cluster nodes
```
60ef182ed3d1b898dae16eb2138fc7b2c02ecdab 192.168.11.228:6386@16386 slave 84484ee038e3584aa69038297f32674fb2aca592 0 1672219938331 2 connected
ae03cd1b4d9230fb699efc0050f3d493af73286b 192.168.11.228:6383@16383 master - 0 1672219938000 3 connected 10923-16383
c22abc631a3844580897fa669979f8c4dc2c9336 192.168.11.228:6384@16384 slave ae03cd1b4d9230fb699efc0050f3d493af73286b 0 1672219937000 3 connected
8455f45a19d115bc4f289f5bfbfd4d6be365dd4c 192.168.11.228:6381@16381 myself,master - 0 1672219937000 1 connected 0-5460
53872ddfe6b28f851dcfdf3536d511895603ad62 192.168.11.228:6385@16385 slave 8455f45a19d115bc4f289f5bfbfd4d6be365dd4c 0 1672219939334 1 connected
84484ee038e3584aa69038297f32674fb2aca592 192.168.11.228:6382@16382 master - 0 1672219937326 2 connected 5461-10922
```
#得出结论 (主->从) 6381 -> 6385  |  6382 -> 6386  |  6383 -> 6384
#得出结论 (槽位区间) 6381 -> 0-5460  |  6382 -> 5461-10922  |  6383 -> 10923-16383

#验证槽位影响
```
127.0.0.1:6381> set k1 v1
(error) MOVED 12706 192.168.11.228:6383
127.0.0.1:6381> set k2 v2
OK
127.0.0.1:6381> set k3 v3
OK
127.0.0.1:6381> set k4 v4
(error) MOVED 8455 192.168.11.228:6382
```
exit

#正确的连接集群
redis-cli -p 6381 -c
```
127.0.0.1:6381> FLUSHALL
OK
127.0.0.1:6381> set k1 v1
-> Redirected to slot [12706] located at 192.168.11.228:6383
OK
192.168.11.228:6383> set k2 v2
-> Redirected to slot [449] located at 192.168.11.228:6381
OK
192.168.11.228:6381> set k3 v3
OK
192.168.11.228:6381> set k4 v4
-> Redirected to slot [8455] located at 192.168.11.228:6382
OK
192.168.11.228:6382> 
```
exit

#查看集群信息
redis-cli --cluster check 192.168.11.228:6381
```
192.168.11.228:6381 (8455f45a...) -> 2 keys | 5461 slots | 1 slaves.
192.168.11.228:6383 (ae03cd1b...) -> 1 keys | 5461 slots | 1 slaves.
192.168.11.228:6382 (84484ee0...) -> 1 keys | 5462 slots | 1 slaves.
[OK] 4 keys in 3 masters.
0.00 keys per slot on average.
>>> Performing Cluster Check (using node 192.168.11.228:6381)
M: 8455f45a19d115bc4f289f5bfbfd4d6be365dd4c 192.168.11.228:6381
   slots:[0-5460] (5461 slots) master
   1 additional replica(s)
S: 60ef182ed3d1b898dae16eb2138fc7b2c02ecdab 192.168.11.228:6386
   slots: (0 slots) slave
   replicates 84484ee038e3584aa69038297f32674fb2aca592
M: ae03cd1b4d9230fb699efc0050f3d493af73286b 192.168.11.228:6383
   slots:[10923-16383] (5461 slots) master
   1 additional replica(s)
S: c22abc631a3844580897fa669979f8c4dc2c9336 192.168.11.228:6384
   slots: (0 slots) slave
   replicates ae03cd1b4d9230fb699efc0050f3d493af73286b
S: 53872ddfe6b28f851dcfdf3536d511895603ad62 192.168.11.228:6385
   slots: (0 slots) slave
   replicates 8455f45a19d115bc4f289f5bfbfd4d6be365dd4c
M: 84484ee038e3584aa69038297f32674fb2aca592 192.168.11.228:6382
   slots:[5461-10922] (5462 slots) master
   1 additional replica(s)
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.
```

##验证主机宕机后从机接管
#(主->从) 6381 -> 6385  |  6382 -> 6386  |  6383 -> 6384
docker stop redis-node-1
docker exec -it redis-node-2 bash
redis-cli -p 6382 -c
cluster nodes
```
84484ee038e3584aa69038297f32674fb2aca592 192.168.11.228:6382@16382 myself,master - 0 1672221983000 2 connected 5461-10922
ae03cd1b4d9230fb699efc0050f3d493af73286b 192.168.11.228:6383@16383 master - 0 1672221983444 3 connected 10923-16383
53872ddfe6b28f851dcfdf3536d511895603ad62 192.168.11.228:6385@16385 master - 0 1672221983000 7 connected 0-5460
c22abc631a3844580897fa669979f8c4dc2c9336 192.168.11.228:6384@16384 slave ae03cd1b4d9230fb699efc0050f3d493af73286b 0 1672221984449 3 connected
8455f45a19d115bc4f289f5bfbfd4d6be365dd4c 192.168.11.228:6381@16381 master,fail - 1672221884962 1672221880000 1 disconnected
60ef182ed3d1b898dae16eb2138fc7b2c02ecdab 192.168.11.228:6386@16386 slave 84484ee038e3584aa69038297f32674fb2aca592 0 1672221982438 2 connected
```
#可见6381宕机后6385变为master

#可用性验证
```
127.0.0.1:6382> get k1
-> Redirected to slot [12706] located at 192.168.11.228:6383
"v1"
192.168.11.228:6383> get k2
-> Redirected to slot [449] located at 192.168.11.228:6385
"v2"
192.168.11.228:6385> get k3
"v3"
192.168.11.228:6385> get k4
-> Redirected to slot [8455] located at 192.168.11.228:6382
"v4"
192.168.11.228:6382> 
```
#通过
exit
exit

##验证主机宕机后恢复
docker start redis-node-1
docker exec -it redis-node-1 bash
redis-cli -p 6381 -c
cluster nodes
```
60ef182ed3d1b898dae16eb2138fc7b2c02ecdab 192.168.11.228:6386@16386 slave 84484ee038e3584aa69038297f32674fb2aca592 0 1672222423154 2 connected
84484ee038e3584aa69038297f32674fb2aca592 192.168.11.228:6382@16382 master - 0 1672222422000 2 connected 5461-10922
ae03cd1b4d9230fb699efc0050f3d493af73286b 192.168.11.228:6383@16383 master - 0 1672222421146 3 connected 10923-16383
8455f45a19d115bc4f289f5bfbfd4d6be365dd4c 192.168.11.228:6381@16381 myself,slave 53872ddfe6b28f851dcfdf3536d511895603ad62 0 1672222422000 7 connected
53872ddfe6b28f851dcfdf3536d511895603ad62 192.168.11.228:6385@16385 master - 0 1672222422150 7 connected 0-5460
c22abc631a3844580897fa669979f8c4dc2c9336 192.168.11.228:6384@16384 slave ae03cd1b4d9230fb699efc0050f3d493af73286b 0 1672222422000 3 connected
```
#可见6381 宕机恢复后 主机依旧由6385代理 6381降为从机
#此时6385 宕机恢复后 主从关系对调

##开始扩容
#建立2个redis容器 开启集群 开启持久化 指定端口号
docker run -d --name redis-node-7 --net host --privileged=true -v /root/qy/redis/share/redis-node-7:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6387
docker run -d --name redis-node-8 --net host --privileged=true -v /root/qy/redis/share/redis-node-8:/data redis:6.0.8 --cluster-enabled yes --appendonly yes --port 6388
#进入redis配置集群
docker exec -it redis-node-7 bash
#将6387作为master节点加入集群 6381作为引路人
redis-cli --cluster add-node 192.168.11.228:6387 192.168.11.228:6381
```
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.
>>> Send CLUSTER MEET to node 192.168.11.228:6387 to make it join the cluster.
[OK] New node added correctly.
```
#检查集群情况
redis-cli --cluster check 192.168.11.228:6381
```
192.168.11.228:6382 (84484ee0...) -> 1 keys | 5462 slots | 1 slaves.
192.168.11.228:6383 (ae03cd1b...) -> 1 keys | 5461 slots | 1 slaves.
192.168.11.228:6387 (dea1b572...) -> 0 keys | 0 slots | 0 slaves.
192.168.11.228:6385 (53872ddf...) -> 2 keys | 5461 slots | 1 slaves.
```
# 6387暂无槽区 重新分配槽区
redis-cli --cluster reshard 192.168.11.228:6381
```
>>> Performing Cluster Check (using node 192.168.11.228:6381)
S: 8455f45a19d115bc4f289f5bfbfd4d6be365dd4c 192.168.11.228:6381
   slots: (0 slots) slave
   replicates 53872ddfe6b28f851dcfdf3536d511895603ad62
S: 60ef182ed3d1b898dae16eb2138fc7b2c02ecdab 192.168.11.228:6386
   slots: (0 slots) slave
   replicates 84484ee038e3584aa69038297f32674fb2aca592
M: 84484ee038e3584aa69038297f32674fb2aca592 192.168.11.228:6382
   slots:[5461-10922] (5462 slots) master
   1 additional replica(s)
M: ae03cd1b4d9230fb699efc0050f3d493af73286b 192.168.11.228:6383
   slots:[10923-16383] (5461 slots) master
   1 additional replica(s)
M: dea1b5727e3dc796c583e4fa10bd85906a3848a6 192.168.11.228:6387
   slots: (0 slots) master
M: 53872ddfe6b28f851dcfdf3536d511895603ad62 192.168.11.228:6385
   slots:[0-5460] (5461 slots) master
   1 additional replica(s)
S: c22abc631a3844580897fa669979f8c4dc2c9336 192.168.11.228:6384
   slots: (0 slots) slave
   replicates ae03cd1b4d9230fb699efc0050f3d493af73286b
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.
How many slots do you want to move (from 1 to 16384)? 
```
# 16384总槽位 / 4总master设备数 = 每个master占4096槽位
4096
```
What is the receiving node ID?
```
#上面输出中6387的node ID
dea1b5727e3dc796c583e4fa10bd85906a3848a6
```
Please enter all the source node IDs.
  Type 'all' to use all the nodes as source nodes for the hash slots.
  Type 'done' once you entered all the source nodes IDs.
Source node #1: 
```
all
```
Do you want to proceed with the proposed reshard plan (yes/no)?
```
yes
#查看集群信息
redis-cli --cluster check 192.168.11.228:6381
```
192.168.11.228:6382 (84484ee0...) -> 1 keys | 4096 slots | 1 slaves.
192.168.11.228:6383 (ae03cd1b...) -> 1 keys | 4096 slots | 1 slaves.
192.168.11.228:6387 (dea1b572...) -> 1 keys | 4096 slots | 0 slaves.
192.168.11.228:6385 (53872ddf...) -> 1 keys | 4096 slots | 1 slaves.
[OK] 4 keys in 4 masters.
0.00 keys per slot on average.
>>> Performing Cluster Check (using node 192.168.11.228:6381)
S: 8455f45a19d115bc4f289f5bfbfd4d6be365dd4c 192.168.11.228:6381
   slots: (0 slots) slave
   replicates 53872ddfe6b28f851dcfdf3536d511895603ad62
S: 60ef182ed3d1b898dae16eb2138fc7b2c02ecdab 192.168.11.228:6386
   slots: (0 slots) slave
   replicates 84484ee038e3584aa69038297f32674fb2aca592
M: 84484ee038e3584aa69038297f32674fb2aca592 192.168.11.228:6382
   slots:[6827-10922] (4096 slots) master
   1 additional replica(s)
M: ae03cd1b4d9230fb699efc0050f3d493af73286b 192.168.11.228:6383
   slots:[12288-16383] (4096 slots) master
   1 additional replica(s)
M: dea1b5727e3dc796c583e4fa10bd85906a3848a6 192.168.11.228:6387
   slots:[0-1364],[5461-6826],[10923-12287] (4096 slots) master
M: 53872ddfe6b28f851dcfdf3536d511895603ad62 192.168.11.228:6385
   slots:[1365-5460] (4096 slots) master
   1 additional replica(s)
S: c22abc631a3844580897fa669979f8c4dc2c9336 192.168.11.228:6384
   slots: (0 slots) slave
   replicates ae03cd1b4d9230fb699efc0050f3d493af73286b
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.
```
#由上可知6387由前3个master槽区间拆分得到4096个槽位
   slots:[0-1364],[5461-6826],[10923-12287] (4096 slots)
   这样槽位分配开销小
#为6387分配从节点6388
redis-cli --cluster add-node 192.168.11.228:6388 192.168.11.228:6387 --cluster-slave --cluster-master-id dea1b5727e3dc796c583e4fa10bd85906a3848a6
#查看集群信息
redis-cli --cluster check 192.168.11.228:6381
```
[OK] New node added correctly.
root@jenkins:/data# redis-cli --cluster check 192.168.11.228:6381
192.168.11.228:6382 (84484ee0...) -> 1 keys | 4096 slots | 1 slaves.
192.168.11.228:6383 (ae03cd1b...) -> 1 keys | 4096 slots | 1 slaves.
192.168.11.228:6387 (dea1b572...) -> 1 keys | 4096 slots | 1 slaves.
192.168.11.228:6385 (53872ddf...) -> 1 keys | 4096 slots | 1 slaves.
[OK] 4 keys in 4 masters.
0.00 keys per slot on average.
>>> Performing Cluster Check (using node 192.168.11.228:6381)
S: 8455f45a19d115bc4f289f5bfbfd4d6be365dd4c 192.168.11.228:6381
   slots: (0 slots) slave
   replicates 53872ddfe6b28f851dcfdf3536d511895603ad62
S: 00a9cd5e4fef183808d9134932a9f16f329e7315 192.168.11.228:6388
   slots: (0 slots) slave
   replicates dea1b5727e3dc796c583e4fa10bd85906a3848a6
S: 60ef182ed3d1b898dae16eb2138fc7b2c02ecdab 192.168.11.228:6386
   slots: (0 slots) slave
   replicates 84484ee038e3584aa69038297f32674fb2aca592
M: 84484ee038e3584aa69038297f32674fb2aca592 192.168.11.228:6382
   slots:[6827-10922] (4096 slots) master
   1 additional replica(s)
M: ae03cd1b4d9230fb699efc0050f3d493af73286b 192.168.11.228:6383
   slots:[12288-16383] (4096 slots) master
   1 additional replica(s)
M: dea1b5727e3dc796c583e4fa10bd85906a3848a6 192.168.11.228:6387
   slots:[0-1364],[5461-6826],[10923-12287] (4096 slots) master
   1 additional replica(s)
M: 53872ddfe6b28f851dcfdf3536d511895603ad62 192.168.11.228:6385
   slots:[1365-5460] (4096 slots) master
   1 additional replica(s)
S: c22abc631a3844580897fa669979f8c4dc2c9336 192.168.11.228:6384
   slots: (0 slots) slave
   replicates ae03cd1b4d9230fb699efc0050f3d493af73286b
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.
```
##开始缩容
#查看集群信息
redis-cli --cluster check 192.168.11.228:6381
```
192.168.11.228:6382 (84484ee0...) -> 1 keys | 4096 slots | 1 slaves.
192.168.11.228:6383 (ae03cd1b...) -> 1 keys | 4096 slots | 1 slaves.
192.168.11.228:6387 (dea1b572...) -> 1 keys | 4096 slots | 1 slaves.
192.168.11.228:6385 (53872ddf...) -> 1 keys | 4096 slots | 1 slaves.
[OK] 4 keys in 4 masters.
0.00 keys per slot on average.
>>> Performing Cluster Check (using node 192.168.11.228:6381)
S: 8455f45a19d115bc4f289f5bfbfd4d6be365dd4c 192.168.11.228:6381
   slots: (0 slots) slave
   replicates 53872ddfe6b28f851dcfdf3536d511895603ad62
S: 00a9cd5e4fef183808d9134932a9f16f329e7315 192.168.11.228:6388
   slots: (0 slots) slave
   replicates dea1b5727e3dc796c583e4fa10bd85906a3848a6
S: 60ef182ed3d1b898dae16eb2138fc7b2c02ecdab 192.168.11.228:6386
   slots: (0 slots) slave
   replicates 84484ee038e3584aa69038297f32674fb2aca592
M: 84484ee038e3584aa69038297f32674fb2aca592 192.168.11.228:6382
   slots:[6827-10922] (4096 slots) master
   1 additional replica(s)
M: ae03cd1b4d9230fb699efc0050f3d493af73286b 192.168.11.228:6383
   slots:[12288-16383] (4096 slots) master
   1 additional replica(s)
M: dea1b5727e3dc796c583e4fa10bd85906a3848a6 192.168.11.228:6387
   slots:[0-1364],[5461-6826],[10923-12287] (4096 slots) master
   1 additional replica(s)
M: 53872ddfe6b28f851dcfdf3536d511895603ad62 192.168.11.228:6385
   slots:[1365-5460] (4096 slots) master
   1 additional replica(s)
S: c22abc631a3844580897fa669979f8c4dc2c9336 192.168.11.228:6384
   slots: (0 slots) slave
   replicates ae03cd1b4d9230fb699efc0050f3d493af73286b
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.
```
#删除6388
redis-cli --cluster del-node 192.168.11.228:6388 00a9cd5e4fef183808d9134932a9f16f329e7315
# 将6387槽区清空 重新分配槽区
redis-cli --cluster reshard 192.168.11.228:6381
```
>>> Performing Cluster Check (using node 192.168.11.228:6381)
S: 8455f45a19d115bc4f289f5bfbfd4d6be365dd4c 192.168.11.228:6381
   slots: (0 slots) slave
   replicates 53872ddfe6b28f851dcfdf3536d511895603ad62
S: 60ef182ed3d1b898dae16eb2138fc7b2c02ecdab 192.168.11.228:6386
   slots: (0 slots) slave
   replicates 84484ee038e3584aa69038297f32674fb2aca592
M: 84484ee038e3584aa69038297f32674fb2aca592 192.168.11.228:6382
   slots:[6827-10922] (4096 slots) master
   1 additional replica(s)
M: ae03cd1b4d9230fb699efc0050f3d493af73286b 192.168.11.228:6383
   slots:[12288-16383] (4096 slots) master
   1 additional replica(s)
M: dea1b5727e3dc796c583e4fa10bd85906a3848a6 192.168.11.228:6387
   slots:[0-1364],[5461-6826],[10923-12287] (4096 slots) master
M: 53872ddfe6b28f851dcfdf3536d511895603ad62 192.168.11.228:6385
   slots:[1365-5460] (4096 slots) master
   1 additional replica(s)
S: c22abc631a3844580897fa669979f8c4dc2c9336 192.168.11.228:6384
   slots: (0 slots) slave
   replicates ae03cd1b4d9230fb699efc0050f3d493af73286b
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.
How many slots do you want to move (from 1 to 16384)? 
```
#重新分配6387占有的4096个槽位
4096
```
What is the receiving node ID?
```
# 6385master接收
53872ddfe6b28f851dcfdf3536d511895603ad62
```
Please enter all the source node IDs.
  Type 'all' to use all the nodes as source nodes for the hash slots.
  Type 'done' once you entered all the source nodes IDs.
Source node #1: 
```
#这重新分配的4096个槽位来自6387
dea1b5727e3dc796c583e4fa10bd85906a3848a6
done
```
Do you want to proceed with the proposed reshard plan (yes/no)? 
```
yes

#查看集群信息 可知6387槽位已剔除
redis-cli --cluster check 192.168.11.228:6381
```
192.168.11.228:6382 (84484ee0...) -> 1 keys | 4096 slots | 1 slaves.
192.168.11.228:6383 (ae03cd1b...) -> 1 keys | 4096 slots | 1 slaves.
192.168.11.228:6387 (dea1b572...) -> 0 keys | 0 slots | 0 slaves.
192.168.11.228:6385 (53872ddf...) -> 2 keys | 8192 slots | 1 slaves.
[OK] 4 keys in 4 masters.
0.00 keys per slot on average.
>>> Performing Cluster Check (using node 192.168.11.228:6381)
S: 8455f45a19d115bc4f289f5bfbfd4d6be365dd4c 192.168.11.228:6381
   slots: (0 slots) slave
   replicates 53872ddfe6b28f851dcfdf3536d511895603ad62
S: 60ef182ed3d1b898dae16eb2138fc7b2c02ecdab 192.168.11.228:6386
   slots: (0 slots) slave
   replicates 84484ee038e3584aa69038297f32674fb2aca592
M: 84484ee038e3584aa69038297f32674fb2aca592 192.168.11.228:6382
   slots:[6827-10922] (4096 slots) master
   1 additional replica(s)
M: ae03cd1b4d9230fb699efc0050f3d493af73286b 192.168.11.228:6383
   slots:[12288-16383] (4096 slots) master
   1 additional replica(s)
M: dea1b5727e3dc796c583e4fa10bd85906a3848a6 192.168.11.228:6387
   slots: (0 slots) master
M: 53872ddfe6b28f851dcfdf3536d511895603ad62 192.168.11.228:6385
   slots:[0-6826],[10923-12287] (8192 slots) master
   1 additional replica(s)
S: c22abc631a3844580897fa669979f8c4dc2c9336 192.168.11.228:6384
   slots: (0 slots) slave
   replicates ae03cd1b4d9230fb699efc0050f3d493af73286b
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.
```
#删除6387
redis-cli --cluster del-node 192.168.11.228:6387 dea1b5727e3dc796c583e4fa10bd85906a3848a6
#查看集群信息 可知6387已删除
redis-cli --cluster check 192.168.11.228:6381
```
192.168.11.228:6382 (84484ee0...) -> 1 keys | 4096 slots | 1 slaves.
192.168.11.228:6383 (ae03cd1b...) -> 1 keys | 4096 slots | 1 slaves.
192.168.11.228:6385 (53872ddf...) -> 2 keys | 8192 slots | 1 slaves.
[OK] 4 keys in 3 masters.
0.00 keys per slot on average.
>>> Performing Cluster Check (using node 192.168.11.228:6381)
S: 8455f45a19d115bc4f289f5bfbfd4d6be365dd4c 192.168.11.228:6381
   slots: (0 slots) slave
   replicates 53872ddfe6b28f851dcfdf3536d511895603ad62
S: 60ef182ed3d1b898dae16eb2138fc7b2c02ecdab 192.168.11.228:6386
   slots: (0 slots) slave
   replicates 84484ee038e3584aa69038297f32674fb2aca592
M: 84484ee038e3584aa69038297f32674fb2aca592 192.168.11.228:6382
   slots:[6827-10922] (4096 slots) master
   1 additional replica(s)
M: ae03cd1b4d9230fb699efc0050f3d493af73286b 192.168.11.228:6383
   slots:[12288-16383] (4096 slots) master
   1 additional replica(s)
M: 53872ddfe6b28f851dcfdf3536d511895603ad62 192.168.11.228:6385
   slots:[0-6826],[10923-12287] (8192 slots) master
   1 additional replica(s)
S: c22abc631a3844580897fa669979f8c4dc2c9336 192.168.11.228:6384
   slots: (0 slots) slave
   replicates ae03cd1b4d9230fb699efc0050f3d493af73286b
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.
```
exit
docker rm -f redis-node-7 redis-node-8